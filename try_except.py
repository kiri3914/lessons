
# users = {
#     'name': 'Anton'
# }

# try:
#     print(users['name'])

# except KeyError as e:
#     print('Мы отловили KeyError', e)

# except NameError as e:
#     print('Вы не создали переменную!', e)

# else:
#     print('Все ок! 200')

# finally:
#     print('Обработка ошибок завершено!')


# zero_except = 0

# while True: 
#     try:
#         print(eval(input('>>> ')))
#     except ZeroDivisionError as e:
#         zero_except += 1
#         print('Вы пытаетесь делить на ноль!')
#         print('Больше не пытайтесь! или мы вас забаним!')

#     except TypeError as e:
#         print('Вы пытаетесь работать с разнымим типамим данных!', e)

#     except KeyboardInterrupt as e:
#         print('\nВы остоновили операцию!')
#         break
    
#     except SyntaxError as e:
#         print('Синтаксическая ошибка')

#     except NameError as e:
#         print('Вы не создали переменное!')

#     if zero_except == 3:
#         print('Мы забанили вас из за ZeroDivisionError')
#         print('Вы уже поделили 3 раза')
#         break 


# import random

# from random import randint, randrange, choice, shuffle

# users = ['Edil', 'Bekarys', 'Beka', 'Dimash', 'Bayan', 'Me', 'Ruslan', 'Ilana', 'Alexandra', 'Ibragim']


# shuffle(users)
# print(users)
# print(choice(users))
# print(random.randrange(0, 10, 2))
# print(randint(0, 10))
# print(random.randint(0, 10))


import os

# os.system('ls / >> commannd.txt')

# s = os.getcwd() # Возвращает текущий рабочий каталог в виде строки

# print(s.split('/'))

# os.chdir(path): Изменяет текущий рабочий каталог на указанный путь.

# a = os.listdir('/Users/kiri/Desktop') #: Возвращает список файлов и каталогов в указанном пути.

# print(a)

# os.mkdir(path): Создает новый каталог по указанному пути.

# os.remove(path): Удаляет файл по указанному пути.

# os.rmdir(path): Удаляет каталог по указанному пути. Каталог должен быть пустым.

# os.rename(src, dst): Переименовывает файл или каталог с указанного пути на новый путь.

# os.path.exists(path): Проверяет, существует ли файл или каталог по указанному пути.

# a = os.path.isfile('/Users/kiri/python_mor/lessons/day1.py') #: Проверяет, является ли путь файлом.

# print(a)

# os.path.isdir(path): Проверяет, является ли путь каталогом.

# os.path.join(path1, path2): Объединяет два пути в один, учитывая правильное разделение каталогов в операционной системе.

# os.path.splitext(path): Разделяет путь на корень и расширение файла.

# os.path.basename(path): Возвращает базовое имя файла или каталога из указанного пути.

# os.path.dirname(path): Возвращает имя родительского каталога из указанного пути.

# size = os.path.getsize('/Users/kiri/python_mor/lessons/day1.py') # : Возвращает размер файла в байтах.

# print(size)

# # Задача 1
# Напишите программу, которая генерирует случайное целое число от 1 до 10 и просит пользователя угадать это число. Используйте конструкцию try-except для обработки некорректного ввода.

# # Задача 2
# Создайте список из нескольких строковых элементов. Затем напишите программу, которая выбирает случайный элемент из списка и выводит его на экран.

# # Задача 3
# Напишите программу, которая генерирует случайное число от 1 до 1000 
# и просит пользователя угадать это число. Если пользователь вводит число,
#  меньшее или большее загаданного числа, 
# программа должна выводить сообщение "Слишком мало" или "Слишком много" 
# соответственно. Используйте конструкцию try-except для обработки некорректного ввода.


# import random
# count = 0
# n = random.randrange(1, 1000)
# while True:
#     try:
#         x = int(input('Введите числа от 1 для 1000: '))
#         if x == n:
#             print('GOOD')
#             print(f'Vi ygadali: {count} popitok')
#             break
#         else:
#             print('Sobaka umnee')
#         if x > n:
#             print("Sliwkom mnogo")
#         else:
#             print("Sliwkom malo")
#         count += 1
#     except ValueError as n:
#         print("Function doesnt work")      


# # Задача 4
# Создайте список из чисел. Напишите программу, 
# которая выбирает случайное число из списка и выводит 
# его на экран. Используйте конструкцию try-except для обработки 
# случая, когда список пустой.



# # Задача 5
# Напишите программу, которая генерирует случайные координаты x и y в 
# диапазоне от 0 до 1 и выводит их на экран.

import random

x = random.random()
y = random.random()

print(x, y)


# # Задача 6
# Создайте список из нескольких элементов разных типов данных (числа, строки, списки и т.д.). Напишите программу, которая выбирает случайный элемент из списка и выводит его на экран. Используйте конструкцию try-except для обработки случая, когда список пустой или элемент имеет несовместимый тип данных.

# # Задача 7
# Напишите программу, которая генерирует случайные пароли заданной длины. Используйте модуль random для выбора случайных символов из заданного набора.

# # Задача 8
# Создайте функцию, которая принимает на вход число и выбирает случайное целое число от 1 до заданного числа. Используйте конструкцию try-except для обработки случая, когда входное число не является целым положительным числом.

# # Задача 9
# Напишите программу, которая генерирует случайную последовательность символов заданной длины (например, для генерации случайного кода).

# # Задача 10
# Создайте список из строковых элементов. Напишите программу, которая выбирает случайный элемент из списка и пытается преобразовать его в число с помощью функции int(). Используйте конструкцию try-except для обработки случая, когда элемент списка не может быть преобразован в число.



